const paths = require('../paths');
const pkg = require(paths.join(paths.ROOT, 'package.json'));
const gulp = require('gulp');
const del = require('del');
const ghPages = require('gh-pages');
const extend = require('extend');
const rename = require('gulp-rename');

/**
 * WordPress Deploy task
 *
 * It deploys to github page including the right `README.md` file
 */
module.exports = function wpDeploy (callback) {
  return gulp.series(
    wpDeployCopyReadme,
    wpDeployDistributableSource,
    wpDeployCleanReadme,
  )(callback);
}

/**
 * Copy readme
 *
 * It copies the just autogenerated readme.md file to the dist folder renaming
 * it to uppercase. This will be deployed to the dist branch `master` for
 * readiblity on github or gitlab but it will later be removed from the
 * distributable zip.
 */
function wpDeployCopyReadme() {
  return gulp.src(paths.join(paths.ROOT, 'readme.md'))
    .pipe(rename('README.md'))
    .pipe(gulp.dest(paths.DIST));
}

/**
 * Deploy distributable source
 *
 * Deploys the distributable source to a public or a private repo, by default
 * to the `master` branch of the GitHbu project's repo
 */
function wpDeployDistributableSource (callback) {
  return ghPages.publish(paths.DIST, extend({
    remote: 'origin',
    branch: 'master',
  }, pkg.config.deployGithub || {}), callback);
}

/**
 * Clan readme
 *
 * It deletes the just autogenerated readme.md file from the root folder, over
 * there we already have the README.md file which is the one targeting the
 * `develop` branch.
 */
function wpDeployCleanReadme() {
  return del(paths.join(paths.ROOT, 'readme.md'), { force: true });
}
